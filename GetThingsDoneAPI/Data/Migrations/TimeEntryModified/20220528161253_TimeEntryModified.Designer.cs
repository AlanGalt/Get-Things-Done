// <auto-generated />
using System;
using GetThingsDoneAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GetThingsDoneAPI.Data.Migrations.TimeEntryModified
{
    [DbContext(typeof(GetThingsDoneDbContext))]
    [Migration("20220528161253_TimeEntryModified")]
    partial class TimeEntryModified
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GetThingsDoneAPI.Models.Issue", b =>
                {
                    b.Property<int>("IssueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IssueId"));

                    b.Property<bool>("IssueActive")
                        .HasColumnType("boolean");

                    b.Property<string>("IssueName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.HasKey("IssueId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("GetThingsDoneAPI.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProjectId"));

                    b.Property<bool>("ProjectActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("GetThingsDoneAPI.Models.TimeEntry", b =>
                {
                    b.Property<int>("TimeEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TimeEntryId"));

                    b.Property<int>("IssueId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("TimeEntryDate")
                        .HasColumnType("date");

                    b.Property<string>("TimeEntryDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TimeEntryHours")
                        .HasColumnType("integer");

                    b.HasKey("TimeEntryId");

                    b.HasIndex("IssueId");

                    b.ToTable("TimeEntries");
                });

            modelBuilder.Entity("GetThingsDoneAPI.Models.Issue", b =>
                {
                    b.HasOne("GetThingsDoneAPI.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("GetThingsDoneAPI.Models.TimeEntry", b =>
                {
                    b.HasOne("GetThingsDoneAPI.Models.Issue", "Issue")
                        .WithMany()
                        .HasForeignKey("IssueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Issue");
                });
#pragma warning restore 612, 618
        }
    }
}
